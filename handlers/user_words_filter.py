import re
from aiogram import Bot, Router
from aiogram.types import Message
from aiogram.enums.chat_member_status import ChatMemberStatus
from pymorphy2 import MorphAnalyzer

user_words_filter_router = Router()
morph = MorphAnalyzer()

ban_words = {
    '–∫–ª–æ—É–Ω', '–¥—É—Ä–∞–∫', '—á–º–æ', '–ª–æ—Ö', '–ª–æ—à', '–ø–∏–¥—Ä', 'weed', '—Å—É–∫–∞', '–ª–æ—à–∞—Ä–∞', '–µ—à–∞–∫'
}

# –°–∏–º–≤–æ–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è –æ–±—Ö–æ–¥–∞ —Ñ–∏–ª—å—Ç—Ä–∞
replacements = {
    '–∞': 'a', '–µ': 'e', '–æ': 'o', '—Ä': 'p', '—Å': 'c', '—É': 'y', '—Ö': 'x',
    '0': 'o', '1': 'l', '3': 'e', '.': '', '*': '', ' ': '', '-': '', '_': '',
    '!': '', '@': '', '#': '', '$': '', '%': '', '^': '', '&': '', '=': '', '+': ''
}

# –†–µ–≥—É–ª—è—Ä–Ω—ã–µ –≤—ã—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ —Å—Å—ã–ª–æ–∫
telegram_link_pattern = r"(?:https?://)?(?:t\.me|telegram\.me)/[\w+]+|@\w+"
url_pattern = r"(?:https?://|www\.)\S+"


@user_words_filter_router.message()
async def filter_bad_words(message: Message, bot: Bot):
    chat_member = await bot.get_chat_member(message.chat.id, message.from_user.id)
    if chat_member.status in (ChatMemberStatus.ADMINISTRATOR, ChatMemberStatus.CREATOR):
        return  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∞–¥–º–∏–Ω–æ–º

    text = message.text.lower().strip()  # –ø–æ–ª—É—á–∞–µ–º–æ–µ —Å–º—Å –ø—Ä–∏–≤–æ–¥–∏–º –≤ –Ω–∏–∂–Ω–∏–π —Ä–µ–≥–∏—Å—Ç—Ä –∏ —á–∏—â–µ–º

    # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã, —Å–∏–º–≤–æ–ª—ã –∏ –∑–∞–º–µ–Ω—è–µ–º –±—É–∫–≤—ã
    normolized_text = text
    for rus, eng in replacements.items():
        normolized_text = normolized_text.replace(rus, eng)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ —Å–ª–æ–≤–æ, –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–µ –∫ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–π —Ñ–æ—Ä–º–µ
    words = text.split()
    normolized_words = {morph.parse(word)[0].normal_form for word in words}

    # –§–∏–ª—å—Ç—Ä –∑–∞–ø—Ä–µ—à–µ–Ω–Ω—ã—Ö —Å–ª–æ–≤
    if any(bad_word in normolized_text for bad_word in ban_words) or \
            any(bad_word in normolized_words for bad_word in ban_words):
        await message.delete()  # —É–¥–∞–ª—è–µ–º –∑–∞–ø—Ä–µ—à–µ–Ω–Ω–æ —Å–æ–æ–±—à–µ–Ω–∏–µ
        await message.answer(f'üõë {message.from_user.first_name}, –Ω–µ —Ä—É–≥–∞–π—Å—è!')

    # –§–∏–ª—å—Ç—Ä —Ç–µ–ª–µ–≥—Ä–∞–º-—Å—Å—ã–ª–æ–∫ –∏ –ª—é–±—ã—Ö –¥—Ä—É–≥–∏—Ö —Å—Å—ã–ª–æ–∫
    elif re.search(telegram_link_pattern, text) or re.search(url_pattern, text):
        await message.delete()
        await message.answer(f'‚õî {message.from_user.first_name}, —Å—Å—ã–ª–∫–∏ –∑–∞–ø—Ä–µ—à–µ–Ω–Ω—ã')


# –ü—Ä–µ–∂–Ω–∏–π –∫–æ–¥
# @user_words_filter_router.message(F.text)
# async def filter_band_words(message: Message, bot: Bot) -> Any:
#     # –ø—Ä–æ–≤–µ—Ä–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–æ–º –∏–ª–∏ –ø—Ä–æ—Å—Ç—ã–º —é–∑–µ—Ä–æ–º. –ï—Å–ª–∏ –∞–¥–º–∏–Ω —Ç–æ —Ñ–∏–ª—å—Ç—Ä –Ω–∞ –Ω–µ–≥–æ –Ω–µ –¥–µ–π—Å—Ç–≤—É–µ—Ç
#     chat_member = await bot.get_chat_member(message.chat.id, message.from_user.id)
#     if chat_member.status in ('administrator', 'creator'):
#         return  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
#
#     # –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–ª–æ–≤ —á–µ—Ä–µ–∑ –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä
#     for word in message.text.lower().strip().split():
#         parsed_word = morph.parse(word)[0]
#         normal_form = parsed_word.normal_form
#
#         for pattern in ban_words:
#             if re.search(pattern, normal_form, re.IGNORECASE):
#                 return await message.answer('ü§¨ –Ω–µ —Ä—É–≥–∞–π—Å—è')
#
#         for bad_word in ban_words:
#             if bad_word in normal_form:
#                 return await message.answer('ü§¨ –Ω–µ —Ä—É–≥–∞–π—Å—è')
#
#     # –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ–≥–æ —Ç–µ–∫—Å—Ç–∞
#     for pattern in ban_words:
#         if re.search(pattern, message.text, re.IGNORECASE):
#             return await message.answer('–ù—É –Ω—É –Ω—É, –Ω–µ —Ä—É–≥–∞–π—Å—è')
